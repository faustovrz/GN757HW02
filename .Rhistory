trail
write.table(trail, quote = FALSE, row.names = FALSE, sep = "\t")
write.table(trail, file = "trailuser.txt",quote = FALSE, row.names = FALSE, sep = "\t")
trail <- read.table('trailuser.txt', sep = "\t", header = TRUE, row.names = NULL)
trail
lm01 <- lm(data = trailer, volume ~ avgtemp + precip + dayType + spring.id +  )
lm01 <- lm(data = trailer, volume ~ avgtemp + precip + dayType + spring.id + summer.id)
lm01 <- lm(data = trail, volume ~ avgtemp + precip + dayType + spring.id + summer.id)
lm01
summary(lm01)
lm01 <- lm(data = trail, volume ~ avgtemp + precip + dayType + spring.id + summer.id)
lm02 <- lm(data = trail, volume ~ avgtemp + precip + dayType)
summary(lm02)
aov(lm01)
aov_01 <- aov(lm01)
lm01 <- lm(data = trail, volume ~ avgtemp + precip + dayType + spring.id + summer.id)
aov_01 <- aov(lm01)
aov_01
lm02 <- lm(data = trail, volume ~ avgtemp + precip + dayType)
lm02 <- lm(data = trail, volume ~ avgtemp + precip + dayType)
aov_02 <- aov(lm02)
aov_02
anova(lm02, lm01)
oldpar <- par
par(mfrow=c(2,2))
with(lm02, {
plot(residuals ~ fitted.values)
plot(residuals ~ model$avgtemp)
plot(residuals ~ model$precip)
qqplot(residuals)
}
)
?qqplot
oldpar <- par
par(mfrow=c(2,2))
with(lm02, {
plot(residuals ~ fitted.values)
plot(residuals ~ model$avgtemp)
plot(residuals ~ model$precip)
qqnorm(residuals)
}
)
oldpar <- par
par(mfrow=c(2,2))
with(lm02, {
plot(residuals ~ fitted.values)
plot(residuals ~ model$avgtemp)
plot(residuals ~ model$precip)
qqnorm(residuals)
}
)
oldpar <- par
par(mfrow=c(2,2))
with(lm02, {
plot(residuals ~ fitted.values)
plot(residuals ~ model$avgtemp)
plot(residuals ~ model$precip)
qqnorm(residuals)
}
)
?abline
nrow(trail)
aov(lm03)
lm03 <- lm(data = trail, volume ~ avgtemp + avgtemp^2 + precip + dayType)
aov(lm03)
par(mfrow=c(1,2))
with(lm03, {
plot( volume ~ model$avgtemp)
plot(volume ~ model$avgtemp^2)
}
)
par(mfrow=c(1,2))
with(trail, {
plot( volume ~  avgtemp)
plot(volume ~ avgtemp^2)
}
)
par(mfrow=c(1,2))
with(trail, {
plot( volume ~  avgtemp)
plot(volume ~ avgtemp2)
}
)
avgtemp2 <- trail$avgtemp^2
par(mfrow=c(1,2))
with(trail, {
plot( volume ~  avgtemp)
plot(volume ~ avgtemp2)
}
)
avgtemp2 <- trail$avgtemp^2
par(mfrow=c(2,1))
with(trail, {
plot( volume ~  avgtemp)
plot(volume ~ avgtemp2)
}
)
avgtemp2 <- trail$avgtemp^2
with(trail, {
plot( volume ~  avgtemp2)
}
)
alpha <- 0.01
t <- qt(1-alpha/2,  df = summary_lm0$df[2])
summary_lm03 <- summary(lm03)
summary_lm03
summary_lm03 <- summary(lm03)
summary_lm03
dayType
trail$weekday.id
trail$dayType
avgtemp2 <- trail$avgtemp^2
lm03 <- lm(data = trail, volume ~ avgtemp + avgtemp2 + precip + weekday.id)
lm03
summary(lm03)
plot(data = trail,volume ~  avgtemp)
summary_lm03 <- summary(lm03)
summary_lm03
summary_lm03$df
?confint
confint(lm03, "weekday.id", level = 0.99)
predict(lm03,
data.frame(avgtemp    = 15,
avgtemp2   = 15^2,
precip     = 0.05,
weekday.id = 1)
)
avgtemp2   <- trail$avgtemp^2
sqrt_precip <-sqrt(trail$avgtemp)
lm04 <- lm(data = trail, volume ~ avgtemp + avgtemp2 + sqrt_precip + weekday.id)
lm04
summary(lm04)
par(mfrow=c(1,2))
hist(trail$precip)
hist(sqrt_precip)
par(mfrow=c(1,2))
with(trail,{
hist(precip)
hist(sqrt(precip))
}
)
par(mfrow=c(1,2))
with(trail, {
hist(precip)
hist(sqrt(precip))
}
)
avgtemp2   <- trail$avgtemp^2
sqrt_precip <-sqrt(trail$sqrt_precip)
avgtemp2   <- trail$avgtemp^2
sqrt_precip <-sqrt(trail$precip)
lm04 <- lm(data = trail, volume ~ avgtemp + avgtemp2 + sqrt_precip + weekday.id)
lm04
avgtemp2   <- trail$avgtemp^2
sqrt_precip <-sqrt(trail$precip)
lm04 <- lm(data = trail, volume ~ avgtemp + avgtemp2 + sqrt_precip + weekday.id)
lm04
summary(lm04)
predict(lm04,
data.frame(avgtemp    = 15,
avgtemp2   = 15^2,
precip     = 0.05,
weekday.id = 1)
)
predict(lm04,
data.frame(avgtemp     = 15,
avgtemp2    = 15^2,
sqrt_precip = sqrt(0.05),
weekday.id  = 1)
)
library(dplyr)
read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t")
setwd("~/Desktop/GN757/homework2")
read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t")
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t")
pheno[1:5,1:5]
pheno[1:5,1:6]
pheno[1:5,1:10]
pheno[1:5,1:9]
pheno[1:5,1:8]
pheno[1:5,1:9]
pheno %>% select(!grepl("_",))
pheno %>% select(!grepl("_",.))
?starts_with
pheno %>% select(contains(_))
pheno %>% select(!contains("_"))
pheno %>% dplyr::select(!tidyselect::contains("_"))
pheno %>% dplyr::select(!tidyselect::contains("RowQuality"))
pheno %>% dplyr::select(tidyselect::contains("RowQuality"))
pheno %>% dplyr::select(tidyselect::contains("_"))
pheno %>% dplyr::select(contains("_"))
pheno %>% dplyr::select(contains("R"))
pheno %>% dplyr::select(matches("_"))
pheno %>% dplyr::select(matches("R"))
pheno %>% dplyr::select(matches("P"))
pheno %>%
pheno
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t")
pheno
pheno %>% dplyr::select(starts_with(R))
pheno %>% dplyr::select(starts_with("R"))
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t, header =TRUE)
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
pheno %>% dplyr::select(tidyselect::contains("R"))
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
pheno
pheno %>% dplyr::select(tidyselect::starts_with("R"))
pheno %>% dplyr::select(tidyselect::contains("R"))
pheno %>% dplyr::select(tidyselect::contains("_"))
pheno %>% dplyr::select(!tidyselect::contains("_"))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(funs(sum(is.na(.))))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(sum(is.na(.)))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(sum(is.na()))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(sum(is.na()))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(na = sum(is.na()))
?summarise_all
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(list(sum(is.na())))
pheno %>% dplyr::select(!tidyselect::contains("_")) %%
dplyr::summarise_all(list(sum(is.na())))
?drop_na
??drop_na
tidyr::drop_na()
?tidyr::drop_na()
test <- pheno %>% dplyr::select(!tidyselect::contains("_")) %%
test <- pheno %>% dplyr::select(!tidyselect::contains("_")) %%
test <-  test[, which(colMeans(!is.na(test)) > 0.5)]
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
test <-  test[, which(colMeans(!is.na(test)) > 0.5)]
test
test
colnames(test)[1 ] <- "id"
colnames(test)[1]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =TRUE)
geno
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
geno
geno
geno[1:5,1:5]
ids<- geno[3,]
geno[1:3,1] <-NA
geno[1:5,1,5]
geno[1:5,1:5]
geno[3,] <-NA
ids[1] <-"id"
geno[3,] <- id
ids<- geno[3,]
ids[1] <-"id"
geno[1:3,1] <-NA
geno[3,] <- ids
geno[1:5,1:5]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[1:3,1] <-NA
geno[3,] <- ids
geno[1:5,1:5]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[1,] <-ids
geno[1:5,1:5]
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[2:3,1] <- NA
geno[1,] <-ids
geno[1:5,1:5]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[1:5,1:5]
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[2:3,1] <- NA
geno[1,] <-ids
geno[1:5,1:5]
write.csv(test, "test_pheno.csv", row.names = FALSE, quote = FALSE)
write.csv(test, "test_geno.csv", colnames = FALSE, row.names = FALSE, quote = FALSE)
write.csv(test, "test_geno.csv", col.names = FALSE, row.names = FALSE, quote = FALSE)
write.csv(test, "test_geno.csv", col.names =  FALSE, row.names = FALSE, quote = FALSE)
?write.csv
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
test <-  test[, which(colMeans(!is.na(test)) > 0.5)]
colnames(test)[1] <- "id"
write.csv(test, "test_pheno.csv", row.names = FALSE, quote = FALSE)
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[2:3,1] <- NA
geno[1,] <-ids
geno[1:5,1:5]
write.csv(geno, "test_geno.csv", col.names =  FALSE, row.names = FALSE, quote = FALSE)
write.csv(geno, "test_geno.csv", row.names = FALSE, quote = FALSE)
write.csv(geno, "test_geno.csv", header = FALSE, row.names = FALSE, quote = FALSE)
write.csv(geno, "test_geno.csv", col.names = FALSE, row.names = FALSE, quote = FALSE)
?write.csv
write.table(geno, "test_geno.csv", col.names = FALSE, row.names = FALSE, quote = FALSE, sep =",")
library(qtl)
read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv")
geno[1:5,1:5]
read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv",genotypes = c("0.0","2.0"))
read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"))
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[2:3,1] <- ""
geno[1,] <-ids
geno[1:5,1:5]
write.table(geno, "test_geno.csv", col.names = FALSE, row.names = FALSE, quote = FALSE, sep =",")
library(qtl)
read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"))
?read.cross
read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"), ) %>%
convert2riself()
NC358 <- read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"), ) %>%
convert2riself()
NC358
geno.image(NC358)
augmentedcross <- mqmaugment(NC358, minprob=0.1)
mqm <- mqmscan(NC358)
mqm <- mqmscan(NC358)
NC358.plus <- mqmaugment(simcross, minprob=0.1)
NC358.plus <- mqmaugment(NC358, minprob=0.1)
?mqmaugment
NC358.plus <- mqmaugment(NC358, minprob=0.1)
NC358 <- read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"), ) %>%
convert2riself() %>%
jittermap(amount = 0.1)
NC358
geno.image(NC358)
NC358.plus <- mqmaugment(NC358, minprob=0.2)
NC358.plus <- fill.geno(NC358)
geno.image(NC358)
quartz()
geno.image(NC358)
quartz()
geno.image(NC358.plus)
mqm <- mqmscan(NC358)
mqm <- mqmscan(NC358.plus)
NC358.plus <- fill.geno(NC358)
mqm <- mqmscan(NC358.plus)
?Filter
Filter(var,test)
ncol(Filter(var,test))
ncol(Filter(var(na.rm = TRUE),test))
ncol(Filter(var(na.rm = TRUE),test))
ncol(Filter(var,test, na.rm = TRUE))
Filter(var,test, na.rm = TRUE)
Filter(var,test, na.rm = TRUE)
?Filter
var.rm <- function(var, na.rm =TRUE)
Filter(var.rm,test)
var.rm <- function(x){var(x, na.rm =TRUE)}
Filter(var.rm,test)
ncol(Filter(var.rm,test))
test$TilleringIndex.BorderPlant
var(test$TilleringIndex.BorderPlant)
var.rm <- function(x){var(x, na.rm =TRUE) > 0.1}
ncol(Filter(var.rm,test))
table(x)
table(test$TilleringIndex.BorderPlant)
table(test$TilleringIndex.BorderPlant)
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
table(test$TilleringIndex.BorderPlant)
test$TilleringIndex.BorderPlant
table(as.numerict(test$TilleringIndex.BorderPlant))
table(as.numeric(test$TilleringIndex.BorderPlant))
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
var.rm <- function(x){table(x)[1]/length(x)>0.9}
ncol(Filter(var.rm,test))
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
var.rm <- function(x){table(x)[1]/length(x) > 0.9}
ncol(Filter(var.rm,test))
Filter(var.rm,test)
var.min <- function(x){table(x)[1]/length(x) < 0.9}
test <- pheno %>% dplyr::select(!tidyselect::contains("_"))
var.min <- function(x){table(x)[1]/length(x) < 0.9}
Filter(var.min,test)
var.min <- function(x){table(x)[1]/length(x) < 0.5}
Filter(var.min,test)
ncol(Filter(var.min,test))
var.min <- function(x){table(x)[1]/length(x) < 0.9}
ncol(Filter(var.min,test))
var.min <- function(x){table(x)[1]/length(x) < 0.9}
ncol(Filter(var.min,test))
var.min <- function(x){table(x)[1]/length(x) > 0.9}
ncol(Filter(var.min,test))
var.min <- function(x){table(x)[1]/length(x) < 0.9}
ncol(Filter(var.min,test))
Filter(var.min,test)
ncol(test)
ncol(test)
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
test <- pheno %>%
dplyr::select(!tidyselect::contains("_")) %>%
dplyr::select_if(~sum(!is.na(.)) > 0)
ncol(test)
test <- pheno %>%
dplyr::select(!tidyselect::contains("_")) %>%
dplyr::select_if(~sum(!is.na(.)) > 0) %>%
dplyr::select_if(table(.)[1]/length(.) < 0.9)
test <- pheno %>%
dplyr::select(!tidyselect::contains("_")) %>%
dplyr::select_if(~sum(!is.na(.)) > 0) %>%
dplyr::select_if(~table(.)[1]/length(.) < 0.9)
ncol(test)
pheno <-  read.table("NAM-Project/NAM_populations/population_Z021/RIL_traitMatrix.txt", sep ="\t", header =TRUE)
test <- pheno %>%
dplyr::select(!tidyselect::contains("_")) %>%
dplyr::select_if(~sum(!is.na(.)) > 0) %>%
dplyr::select_if(~table(.)[1]/length(.) < 0.9)
ncol(test)
colnames(test)[1] <- "id"
write.csv(test, "test_pheno.csv", row.names = FALSE, quote = FALSE)
geno <-  read.table("NAM-Project/NAM_populations/population_Z021/NAM_genos_imputed.txt", sep ="\t", header =FALSE)
ids<- geno[3,]
ids[1] <-"id"
geno[2:3,] <- geno[1:2,]
geno[2:3,1] <- ""
geno[1,] <-ids
geno[1:5,1:5]
write.table(geno, "test_geno.csv", col.names = FALSE, row.names = FALSE, quote = FALSE, sep =",")
library(qtl)
NC358 <- read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"), ) %>%
convert2riself() %>%
jittermap(amount = 0.1)
quartz()
geno.image(NC358)
NC358.plus <- fill.geno(NC358)
quartz()
geno.image(NC358.plus)
mqm <- mqmscan(NC358.plus)
NC358.plus
NC358 <- read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"), ) %>%
convert2riself() %>%
jittermap(amount = 0.1)
quartz()
geno.image(NC358)
NC358.plus <- fill.geno(NC358)
quartz()
geno.image(NC358.plus)
mqm <- mqmscan(NC358.plus)
test
NC358 <- read.cross("csvs", ".", "test_geno.csv", "test_pheno.csv", genotypes = c("0.0","2.0"),
na.strings = c("NaN","NA")) %>%
convert2riself() %>%
jittermap(amount = 0.1)
NC358
NC358.plus <- fill.geno(NC358)
mqm <- mqmscan(NC358.plus)
mqm <- mqmscan(NC358.plus)
mqm <- mqmscan(NC358)
mqm <- mqmscan(NC358.plus)
mqm <- mqmscan(NC358.plus)
?mqmscan
mqm <- mqmscan(NC358.plus,pheno.col = 2 )
qm
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 3 )
mqm
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 4 )
mqm
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 4 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 6 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 7 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 10 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 11 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 12 )
mqm
mqm <- mqmscan(NC358.plus,pheno.col = 12 )
plot(mqm)
mqm <- mqmscan(NC358.plus,pheno.col = 11 )
mqm <- mqmscan(NC358.plus,pheno.col = 11 )
plot(mqm)
pheno
test
cor(test[,-1])
?cor
cor(test[,-1],"pairwise.complete.obs")
cor(test[,-1], use ="pairwise.complete.obs")
dist(cor(test[,-1], use ="pairwise.complete.obs"))
dist(cor(test[,-1], use ="pairwise.complete.obs")^2)
quartz()
heatmap(dist(cor(test[,-1], use ="pairwise.complete.obs")^2))
heatmap(dist(cor(test[,-1], use ="pairwise.complete.obs")^2) %>% as.matrix())
